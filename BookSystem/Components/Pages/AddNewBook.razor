@page "/AddNewBook"
@inject IJSRuntime JS
@using DomainModels

@using System.Runtime.CompilerServices

@inject HttpClient _httpClient

<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Book Form</title>
    <style>
        /* General Reset */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        /* Centering and Container Styling */
        .main-content {
            display: flex;
            justify-content: center;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            width: 100%;
            margin: 0 auto;
        }

        /* Card Styling */
        .card {
            border: 1px solid #ddd;
            border-radius: 8px;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }

        .form-group {
            margin-bottom: 16px;
        }

        /* Label and Input Styling */
        label {
            display: block;
            margin-bottom: 6px;
            font-weight: bold;
            font-size: 14px;
        }

        input, textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 4px;
            font-size: 16px;
        }

            input:focus, textarea:focus {
                outline: none;
                border-color: #007bff;
            }

        .helper-text {
            font-size: 12px;
            color: #6c757d;
            margin-top: 4px;
        }

        /* Button Styling */
        .btn-primary {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
        }

            .btn-primary:hover {
                background-color: #0056b3;
            }
    </style>
</head>
<body>

    <div class="main-content">
        <div class="container">
            <div class="card">
                <form onsubmit="postBookToDB(event)">
                    <div class="form-group">
                        <label for="BookTitle">Book Title</label>
                        <input type="text" id="BookTitle" name="BookTitle" required>
                        <div class="helper-text">(Required) Enter the book title</div>
                    </div>

                    <div class="form-group">
                        <label for="bookPages">Number of Pages</label>
                        <input type="text" id="bookPages" name="bookPages" required>
                        <div class="helper-text">(Required) Enter the number of pages</div>
                    </div>

                    <div class="form-group">
                        <label for="bookSummary">Summary</label>
                        <textarea id="bookSummary" name="bookSummary" rows="4"></textarea>
                        <div class="helper-text">(Optional) Enter a summary</div>
                    </div>

                    <div class="form-group">
                        <label for="bookGenre">Genre</label>
                        <input type="text" id="bookGenre" name="bookGenre" required>
                        <div class="helper-text">(Required) Genre</div>
                    </div>

                    <button type="submit" class="btn-primary" onclick="postBookToDB(event)">Add Book</button>
                </form>
            </div>
        </div>
    </div>

    <script>
        async function postBookToDB(event) {
            event.preventDefault();

            // Gather form data
            const BookTitle = document.getElementById('BookTitle').value;
            const BookPages = document.getElementById('BookPages').value;
            const BookSummary = document.getElementById('BookSummary').value;
            const Genres = document.getElementById("Genres").value;

            // Create a book object to send
            const bookData = {
                BookTitle: bookTitle,
                BookPages: bookPages,
                BookSummary: bookSummary,
                genres: bookGenre
            };

            try {
                // Send data to the server using the fetch API
                const response = await fetch('/api/books', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'  // Sending JSON format
                    },
                    body: JSON.stringify(bookData)  // Convert bookData to JSON
                });

                if (response.ok) {
                    const result = await response.json();
                    alert('Book added successfully!');
                    console.log("Response from server:", result);

                    // Optionally, reset the form
                    document.getElementById('bookTitle').value = '';
                    document.getElementById('bookPages').value = '';
                    document.getElementById('bookSummary').value = '';
                } else {
                    const errorText = await response.json();
                    console.log('Response Error Details:', errorText);  // Log error details
                    alert('Error adding book: ' + JSON.stringify(errorText));
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error connecting to the server');
            }
        }


    </script>

</body>
</html>


