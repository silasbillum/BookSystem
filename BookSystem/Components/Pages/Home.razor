@page "/"
@using DomainModels
@inject IHttpClientFactory HttpClientfactory


<PageTitle>Books</PageTitle>

<h1>Books</h1>

@if(books == null)
{
    <p>Loading</p>
}
else
{  
      <div class="Cards">
    @foreach(var book in books)
    {
      
           

          
        
    <div class="infoBox">

            
            @if (book.CoverImage != null)
            {
                <img src="data:image/jpeg;base64,@Convert.ToBase64String(book.CoverImage)"
                     alt="@book.BookTitle"
                     class="book-cover"
                      />
            }
                <div class="book-details">

                <p>Book Title: @book.BookTitle</p>
                <p>Pages: @book.BookPages</p>
                <p>Summary: @book.BookSummary</p>
                <p>Genre:
                        @if (book.Genres != null && book.Genres.Any())
                        {
                                        <span>@string.Join(", ", book.Genres.Select(g => g.Name))</span>
                        }
                        else
                        {
                                        <span>Ingen genrer</span>
                        }
                </p>
                
                </div>
            
        </div>
       
    }
    </div>
}


@code {
    public List<Book> books;

    protected override async Task OnInitializedAsync()
    {
        var client = HttpClientfactory.CreateClient();
        books = await client.GetFromJsonAsync<List<Book>>("https://booksystem-qyu8.onrender.com/api/Books");
    }
}

<style>
   
   .Cards
   {
       
        gap: 20px;
       display:grid;
       margin: 20px auto;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
   }
   .infoBox
   {
       display:flex;
       padding: 5px;
        border: 1px solid; 
        background-color: #DBE2EF; 
        border-color: black;
        border-radius: 5px;
   }
   .book-details{
        flex: 1;
   }
   .book-cover{
        width: 100px;
        height: 150px;
        object-fit: cover;
   }
</style>